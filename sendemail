package com.sds.knoxportal.util;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;

public class MultipartUtil {

	private String boundary;
	private String LINE_FEED = "\r\n";
	private HttpURLConnection con;
	private OutputStream outputStream;
	private PrintWriter printWriter;

	public MultipartUtil(String apiUrl) throws IOException {
		boundary = "---" + System.currentTimeMillis() + "---";
		System.out.println("MultipartUtil boundary = " + boundary);
		URL url = new URL(apiUrl);
		con = (HttpURLConnection) url.openConnection();
		con.setUseCaches(false);
		con.setDoOutput(true);
		con.setDoInput(true);
		con.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);
	}

	public void readyToConnect() throws IOException {
		outputStream = con.getOutputStream();
		printWriter = new PrintWriter(new OutputStreamWriter(outputStream, "UTF-8"), true);
	}

	public void addFilePart(String fieldName, File uploadFile) throws IOException {
		String fileName = uploadFile.getName();
		printWriter.append("--" + boundary).append(LINE_FEED);
		printWriter.append("Content-Disposition: form-data; name=\"" + fieldName + "\"; filename=\"" + fileName + "\"")
				.append(LINE_FEED);
		printWriter.append("Content-Type: " + URLConnection.guessContentTypeFromName(fileName)).append(LINE_FEED);
		printWriter.append("Content-Transfer-Encoding: binary").append(LINE_FEED);
		printWriter.append(LINE_FEED);
		printWriter.flush();

		FileInputStream fileInputStream = new FileInputStream(uploadFile);
		byte[] buffer = new byte[4096];
		int bytesRead = -1;
		while ((bytesRead = fileInputStream.read(buffer)) != -1) {
			outputStream.write(buffer, 0, bytesRead);
		}
		outputStream.flush();
		fileInputStream.close();

		printWriter.append(LINE_FEED);
		printWriter.flush();
	}

	public void addFormField(String name, String value) {
		printWriter.append("--" + boundary).append(LINE_FEED);
		printWriter.append("Content-Disposition: form-data; name=\"" + name + "\"").append(LINE_FEED);
		printWriter.append("Content-Type: text/plain; charset=UTF-8").append(LINE_FEED);
		printWriter.append(LINE_FEED);
		printWriter.append(value).append(LINE_FEED);
		printWriter.flush();
	}

	public void addHeaderField(String name, String value) {
		con.setRequestProperty(name, value);
	}

	public List<String> finish() throws IOException {
		List<String> response = new ArrayList<String>();

		printWriter.append(LINE_FEED).flush();
		printWriter.append("--" + boundary + "--").append(LINE_FEED);
		printWriter.close();

		int status = con.getResponseCode();
		if (status == HttpURLConnection.HTTP_OK) {
			BufferedReader reader = new BufferedReader(new InputStreamReader(con.getInputStream()));
			String line = null;
			while ((line = reader.readLine()) != null) {
				response.add(line);
			}
			reader.close();
			con.disconnect();
		} else {
			throw new IOException("Server returned non-OK status: " + status);
		}
		return response;
	}

}
